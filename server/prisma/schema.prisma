generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart {
  id           String        @id @default(cuid())
  userId       String        @map("user")
  user         user?         @relation(fields: [userId], references: [id])
  cartProducts cartProduct[]
}

model cartProduct {
  id        String  @id @default(cuid())
  cartId    String  @map("cart")
  productId String  @map("product")
  quantity  Int
  cart      cart    @relation(fields: [cartId], references: [id])
  product   product @relation(fields: [productId], references: [id])

  @@map("cart-product")
}

model category {
  id       String    @id @default(cuid())
  name     String?   @db.VarChar(255)
  products product[]
}

model product {
  id           String        @id @default(cuid())
  name         String        @db.VarChar(255)
  price        Float
  categoryId   String        @map("category")
  category     category      @relation(fields: [categoryId], references: [id])
  cartProducts cartProduct[]
}

model profile {
  id   String @id @default(cuid())
  name String @unique @db.VarChar(255)
  user user[]
}

model user {
  id            String          @id @default(cuid())
  name          String          @db.VarChar(255)
  email         String          @unique @db.VarChar(255)
  password      String          @db.VarChar(500)
  token         String?         @db.VarChar(1000)
  profileId     String?         @map("profile")
  profile       profile?        @relation(fields: [profileId], references: [id])
  cart          cart[]
  passwordReset passwordReset[]

  @@unique([id, name, email], name: "passwordResetKey")
}

model passwordReset {
  id     String @id @default(cuid())
  code   Int
  userId String @unique @map("user")
  user   user   @relation(fields: [userId], references: [id])

  @@map("password-reset")
}
