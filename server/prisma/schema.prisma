generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart {
  id           Int           @id @default(autoincrement())
  userId       Int           @map("user")
  user         user?         @relation(fields: [userId], references: [id])
  cartProducts cartProduct[]
}

model cartProduct {
  id        Int     @id @default(autoincrement())
  cartId    Int     @map("cart")
  productId Int     @map("product")
  quantity  Int
  cart      cart    @relation(fields: [cartId], references: [id])
  product   product @relation(fields: [productId], references: [id])

  @@map("cart-product")
}

model category {
  id       Int       @id @default(autoincrement())
  name     String?   @db.VarChar(255)
  products product[]
}

model product {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(255)
  price        Float
  categoryId   Int           @map("category")
  category     category      @relation(fields: [categoryId], references: [id])
  cartProducts cartProduct[]
}

model profile {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(255)
  user user[]
}

model user {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  email         String          @unique @db.VarChar(255)
  password      String          @db.VarChar(500)
  token         String?         @db.VarChar(1000)
  profileId     Int?            @map("profile")
  profile       profile?        @relation(fields: [profileId], references: [id])
  cart          cart[]
  passwordReset passwordReset[]

  @@unique([id, name, email], name: "passwordResetKey")
}

model passwordReset {
  id     Int  @id @default(autoincrement())
  code   Int
  userId Int  @unique @map("user")
  user   user @relation(fields: [userId], references: [id])

  @@map("password-reset")
}
